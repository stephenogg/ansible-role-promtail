---
- name: promtail | assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This module only works with systemd"

- name: promtail | get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version

- name: promtail | set systemd version fact
  set_fact:
    promtail_systemd_version: "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"
    
- name: promtail | create promtail system group
  group:
    name: promtail
    system: true
    state: present

- name: promtail | create promtail system user
  user:
    name: promtail
    system: true
    shell: "/usr/sbin/nologin"
    group: promtail
    #adm can read syslog, nginx logs, postgres logs
    #systemd-journal can read journal 
    groups: adm, systemd-journal
    append: true
    createhome: false
 
- name: create promtail data directory
  file:
    path: "{{ promtail_db_dir }}"
    state: directory
    owner: promtail
    group: promtail
    mode: 0755
    
    
- name: promtail | create promtail configuration directory
  file:
    path: "{{ promtail_config_dir }}"
    state: directory
    owner: root
    group: promtail
    mode: 0770
    
- block:
    - name: promtail | get checksum list
      set_fact:
        __promtail_checksums: "{{ lookup('url', 'https://github.com/grafana/loki/releases/download/v' + promtail_version + '/SHA256SUMS', wantlist=True) | list }}"


    - name: "promtail | get checksum for {{ go_arch }} architecture"
      set_fact:
        __promtail_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ __promtail_checksums }}"
      when:
        - "('promtail-linux-' + go_arch + '.zip') in item"
  delegate_to: localhost

- block:
    - name: promtail | download promtail binary to local folder
      become: false
      get_url:
        url: "https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-{{ go_arch }}.zip"
        dest: "/tmp/promtail-{{ promtail_version }}.linux-{{ go_arch }}.zip"
        checksum: "sha256:{{ __promtail_checksum }}"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      # run_once: true # <-- this cannot be set due to multi-arch support
      delegate_to: localhost
      check_mode: false
      
    - name: promtail | unpack promtail binary
      become: false
      unarchive:
        src: "/tmp/promtail-{{ promtail_version }}.linux-{{ go_arch }}.zip"
        dest: "/tmp"
        creates: "/tmp/promtail-linux-{{ go_arch }}"
      delegate_to: localhost
      check_mode: false      

    - name: promtail | propagate official promtail binary
      copy:
        src: "/tmp/promtail-linux-{{ go_arch }}"
        dest: "{{ _promtail_binary_install_dir }}/promtail"
        mode: 0755
        owner: root
        group: root
      notify:
        - restart promtail



- name: promtail | configure promtail
  template:
    src: "{{ promtail_config_file }}"
    dest: "{{ promtail_config_dir }}/promtail-config.yml"
    force: true
    owner: root
    group: promtail
    mode: 0640
  notify:
    - reload promtail


- name: promtail | create systemd service units
  template:
    src: promtail.service.j2
    dest: /etc/systemd/system/promtail.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart promtail
    
- name: Ensure Promtail is enabled on boot
  become: true
  systemd:
    daemon_reload: true
    name: promtail
    enabled: true
    state: started        